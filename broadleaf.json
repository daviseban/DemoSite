{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Sample Template LAMP_Single_Instance: Create a LAMP stack using a single EC2 instance and a local MySQL database for storage. This template demonstrates using the AWS CloudFormation bootstrap scripts to install the packages and files necessary to deploy the Apache web server, PHP and MySQL at instance launch time. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
    "Mappings": {
        "AWSInstanceType2Arch": {
            "c1.medium": {
                "Arch": "PV64"
            },
            "c1.xlarge": {
                "Arch": "PV64"
            },
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.2xlarge": {
                "Arch": "HVM64"
            },
            "d2.4xlarge": {
                "Arch": "HVM64"
            },
            "d2.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVMG2"
            },
            "g2.8xlarge": {
                "Arch": "HVMG2"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "m1.large": {
                "Arch": "PV64"
            },
            "m1.medium": {
                "Arch": "PV64"
            },
            "m1.small": {
                "Arch": "PV64"
            },
            "m1.xlarge": {
                "Arch": "PV64"
            },
            "m2.2xlarge": {
                "Arch": "PV64"
            },
            "m2.4xlarge": {
                "Arch": "PV64"
            },
            "m2.xlarge": {
                "Arch": "PV64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m4.10xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "m4.large": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "t1.micro": {
                "Arch": "PV64"
            },
            "t2.large": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.nano": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            }
        },
        "AWSInstanceType2NATArch": {
            "c1.medium": {
                "Arch": "NATPV64"
            },
            "c1.xlarge": {
                "Arch": "NATPV64"
            },
            "c3.2xlarge": {
                "Arch": "NATHVM64"
            },
            "c3.4xlarge": {
                "Arch": "NATHVM64"
            },
            "c3.8xlarge": {
                "Arch": "NATHVM64"
            },
            "c3.large": {
                "Arch": "NATHVM64"
            },
            "c3.xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.2xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.4xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.8xlarge": {
                "Arch": "NATHVM64"
            },
            "c4.large": {
                "Arch": "NATHVM64"
            },
            "c4.xlarge": {
                "Arch": "NATHVM64"
            },
            "cc2.8xlarge": {
                "Arch": "NATHVM64"
            },
            "cr1.8xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.2xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.4xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.8xlarge": {
                "Arch": "NATHVM64"
            },
            "d2.xlarge": {
                "Arch": "NATHVM64"
            },
            "g2.2xlarge": {
                "Arch": "NATHVMG2"
            },
            "g2.8xlarge": {
                "Arch": "NATHVMG2"
            },
            "hi1.4xlarge": {
                "Arch": "NATHVM64"
            },
            "hs1.8xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.2xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.4xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.8xlarge": {
                "Arch": "NATHVM64"
            },
            "i2.xlarge": {
                "Arch": "NATHVM64"
            },
            "m1.large": {
                "Arch": "NATPV64"
            },
            "m1.medium": {
                "Arch": "NATPV64"
            },
            "m1.small": {
                "Arch": "NATPV64"
            },
            "m1.xlarge": {
                "Arch": "NATPV64"
            },
            "m2.2xlarge": {
                "Arch": "NATPV64"
            },
            "m2.4xlarge": {
                "Arch": "NATPV64"
            },
            "m2.xlarge": {
                "Arch": "NATPV64"
            },
            "m3.2xlarge": {
                "Arch": "NATHVM64"
            },
            "m3.large": {
                "Arch": "NATHVM64"
            },
            "m3.medium": {
                "Arch": "NATHVM64"
            },
            "m3.xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.10xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.2xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.4xlarge": {
                "Arch": "NATHVM64"
            },
            "m4.large": {
                "Arch": "NATHVM64"
            },
            "m4.xlarge": {
                "Arch": "NATHVM64"
            },
            "r3.2xlarge": {
                "Arch": "NATHVM64"
            },
            "r3.4xlarge": {
                "Arch": "NATHVM64"
            },
            "r3.8xlarge": {
                "Arch": "NATHVM64"
            },
            "r3.large": {
                "Arch": "NATHVM64"
            },
            "r3.xlarge": {
                "Arch": "NATHVM64"
            },
            "t1.micro": {
                "Arch": "NATPV64"
            },
            "t2.large": {
                "Arch": "NATHVM64"
            },
            "t2.medium": {
                "Arch": "NATHVM64"
            },
            "t2.micro": {
                "Arch": "NATHVM64"
            },
            "t2.nano": {
                "Arch": "NATHVM64"
            },
            "t2.small": {
                "Arch": "NATHVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "ap-northeast-1": {
                "HVM64": "ami-374db956",
                "HVMG2": "ami-3efd2c58",
                "PV64": "ami-3e42b65f"
            },
            "ap-northeast-2": {
                "HVM64": "ami-2b408b45",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-south-1": {
                "HVM64": "ami-ffbdd790",
                "HVMG2": "ami-25ffbe4a",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-southeast-1": {
                "HVM64": "ami-a59b49c6",
                "HVMG2": "ami-3e91ed5d",
                "PV64": "ami-df9e4cbc"
            },
            "ap-southeast-2": {
                "HVM64": "ami-dc361ebf",
                "HVMG2": "ami-84a142e6",
                "PV64": "ami-63351d00"
            },
            "ca-central-1": {
                "HVM64": "ami-730ebd17",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "cn-north-1": {
                "HVM64": "ami-8e6aa0e3",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "ami-77559f1a"
            },
            "cn-northwest-1": {
                "HVM64": "ami-cb858fa9",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "ami-80707be2"
            },
            "eu-central-1": {
                "HVM64": "ami-ea26ce85",
                "HVMG2": "ami-be40f2d1",
                "PV64": "ami-6527cf0a"
            },
            "eu-west-1": {
                "HVM64": "ami-f9dd458a",
                "HVMG2": "ami-b411c5cd",
                "PV64": "ami-4cdd453f"
            },
            "eu-west-2": {
                "HVM64": "ami-886369ec",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "sa-east-1": {
                "HVM64": "ami-6dd04501",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "ami-1ad34676"
            },
            "us-east-1": {
                "HVM64": "ami-6869aa05",
                "HVMG2": "ami-1f12e965",
                "PV64": "ami-2a69aa47"
            },
            "us-east-2": {
                "HVM64": "ami-f6035893",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "us-west-1": {
                "HVM64": "ami-31490d51",
                "HVMG2": "ami-7291a112",
                "PV64": "ami-a2490dc2"
            },
            "us-west-2": {
                "HVM64": "ami-7172b611",
                "HVMG2": "ami-5c9b6124",
                "PV64": "ami-7f77b31f"
            }
        }
    },
    "Outputs": {
        "WebsiteURL": {
            "Description": "URL for newly created LAMP stack",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "WebServerInstance",
                                "PublicDnsName"
                            ]
                        },
                        ":8080/mycompany"
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "DBName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "broadleaf",
            "Description": "MySQL database name",
            "MaxLength": "64",
            "MinLength": "1",
            "Type": "String"
        },
        "DBPassword": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters.",
            "Default": "Wipro123",
            "Description": "Password for MySQL database access",
            "MaxLength": "41",
            "MinLength": "1",
            "NoEcho": "true",
            "Type": "String"
        },
        "DBRootPassword": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters.",
            "Default": "Wipro123",
            "Description": "Root password for MySQL",
            "MaxLength": "41",
            "MinLength": "1",
            "NoEcho": "true",
            "Type": "String"
        },
        "DBUser": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "root",
            "Description": "Username for MySQL database access",
            "MaxLength": "16",
            "MinLength": "1",
            "NoEcho": "true",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "t2.micro",
            "Description": "WebServer EC2 instance type",
            "Type": "String"
        },
        "KeyName": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
	    "Default": "coeassessment",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SSHLocation": {
            "AllowedPattern": "(\\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        }
    },
    "Resources": {
        "WebServerInstance": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT5M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "InstallAndRun": [
                            "Install",
                            "Configure"
                        ]
                    },
                    "Configure": {
                        "commands": {
                            "01_set_mysql_root_password": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "mysqladmin -u root password '",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "$(mysql ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            " -u root --password='",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"
                                        ]
                                    ]
                                }
                            },
                            "02_create_database": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "mysql -u root --password='",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "' < /tmp/setup.mysql"
                                        ]
                                    ]
                                },
                                "test": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "$(mysql ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            " -u root --password='",
                                            {
                                                "Ref": "DBRootPassword"
                                            },
                                            "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"
                                        ]
                                    ]
                                }
                            }
                        }
                    },
                    "Install": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000400",
                                "owner": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource WebServerInstance ",
                                            "         --configsets InstallAndRun ",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "runas=root\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000400",
                                "owner": "root"
                            },
                            "/tmp/setup.mysql": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "CREATE DATABASE ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            ";\n",
                                            "GRANT ALL ON ",
                                            {
                                                "Ref": "DBName"
                                            },
                                            ".* TO '",
                                            {
                                                "Ref": "DBUser"
                                            },
                                            "'@localhost IDENTIFIED BY '",
                                            {
                                                "Ref": "DBPassword"
                                            },
                                            "';\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000666",
                                "owner": "root"
                            },
                            "/var/lib/tomcat8/webapps/mycompany.war": {
                                "group": "tomcat",
                                "mode": "000666",
                                "owner": "tomcat",
                                "source": "https://s3.us-east-2.amazonaws.com/wipro-cmp/MigrationPlatform/pipelineOutput/site/target/mycompany.war"
                            }
                        },
                        "packages": {
                            "yum": {
                                "mysql": [
                                ],
                                "mysql-libs": [
                                ],
                                "mysql-server": [
                                ],
                                "tomcat8": [
                                ]
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                },
                                "mysqld": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                },
                                "tomcat8": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebServerSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum install -y java-1.8.0-openjdk \n",
                                "/usr/sbin/alternatives --set java /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java \n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource WebServerInstance ",
                                "         --configsets InstallAndRun ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "# Signal the status from cfn-init\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource WebServerInstance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "WebServerSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable HTTP access via port 80",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "8080",
                        "IpProtocol": "tcp",
                        "ToPort": "8080"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    }
}
